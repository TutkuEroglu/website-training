{"ast":null,"code":"var _jsxFileName = \"D:\\\\siteapp\\\\client\\\\src\\\\pages\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport ReactScrollableFeed from \"react-scrollable-feed\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst CONNECTION_PORT = \"localhost:3001\";\n\nfunction Chat() {\n  _s();\n\n  // before login\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [room, setRoom] = useState(\"Class of 2023\"); // after login\n\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  useEffect(() => {\n    socket = io(CONNECTION_PORT);\n  }, [CONNECTION_PORT]);\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList([...messageList, data]);\n    });\n  });\n\n  const connectToRoom = () => {\n    setLoggedIn(true);\n    socket.emit(\"join_room\", room);\n  };\n\n  const sendMessage = e => {\n    let messageContent = {\n      room: room,\n      content: {\n        author: userName,\n        message: message\n      }\n    };\n    setMessage(\"\");\n    e.preventDefault();\n    socket.emit(\"send_message\", messageContent);\n    setMessageList([...messageList, messageContent.content]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Appq\",\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logIn\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name...\",\n          onChange: e => {\n            setUserName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Room...\",\n          onChange: e => {\n            setRoom(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectToRoom,\n        children: \"Enter Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(ReactScrollableFeed, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: messageList.map((val, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messageContainer\",\n              id: val.author === userName ? \"Other\" : \"You\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"messageIndividual\",\n                children: [val.author, \": \", val.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageInputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          placeholder: \"Message...\",\n          onChange: e => {\n            setMessage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"JaUcRVBp9wjm1rqKTWg15k/UEDo=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["D:/siteapp/client/src/pages/Chat/Chat.js"],"names":["React","useState","useEffect","io","ReactScrollableFeed","socket","CONNECTION_PORT","Chat","loggedIn","setLoggedIn","userName","setUserName","room","setRoom","message","setMessage","messageList","setMessageList","on","data","connectToRoom","emit","sendMessage","e","messageContent","content","author","preventDefault","target","value","map","val","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport ReactScrollableFeed from \"react-scrollable-feed\";\r\nimport \"./Chat.css\"\r\n\r\n\r\n\r\nlet socket;\r\nconst CONNECTION_PORT = \"localhost:3001\";\r\n\r\nfunction Chat() {\r\n  // before login\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"Class of 2023\");\r\n\r\n  // after login\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket = io(CONNECTION_PORT);\r\n  }, [CONNECTION_PORT]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_message\", (data) => {\r\n      setMessageList([...messageList, data]);\r\n    });\r\n  });\r\n\r\n  const connectToRoom = () => {\r\n    setLoggedIn(true);\r\n    socket.emit(\"join_room\", room);\r\n  };\r\n\r\n  const sendMessage =  (e) => {\r\n    let messageContent = {\r\n      room: room,\r\n      content: {\r\n        author: userName,\r\n        message: message,\r\n      },\r\n    };\r\n\r\n    setMessage(\"\");\r\n    e.preventDefault();\r\n    \r\n    socket.emit(\"send_message\", messageContent);\r\n    setMessageList([...messageList, messageContent.content]);\r\n    \r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"Appq\">\r\n      {!loggedIn ? (\r\n        <div className=\"logIn\">\r\n          <div className=\"inputs\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name...\"\r\n              onChange={(e) => {\r\n                setUserName(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Room...\"\r\n              onChange={(e) => {\r\n                setRoom(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <button onClick={connectToRoom}>Enter Chat</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"chatContainer\">\r\n          <ReactScrollableFeed>\r\n            <div className=\"messages\">\r\n              {messageList.map((val, key) => {\r\n                return (\r\n                  <div\r\n                    className=\"messageContainer\"\r\n                    id={val.author === userName ? \"Other\" : \"You\"}\r\n                  >\r\n                    <div className=\"messageIndividual\">\r\n                      {val.author}: {val.message}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </ReactScrollableFeed>\r\n          <div className=\"messageInputs\">\r\n            <input\r\n              type=\"text\"\r\n              value={message}\r\n              placeholder=\"Message...\"\r\n              onChange={(e) => {\r\n                setMessage(e.target.value);\r\n              }}\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}