{"ast":null,"code":"import _toConsumableArray from\"D:/siteapp - Kopya/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:/siteapp - Kopya/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import io from\"socket.io-client\";import ReactScrollableFeed from\"react-scrollable-feed\";import\"./Chat.css\";import{useSelector}from\"react-redux\";import{selectUser}from\"../reducer/infuser\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var socket;var CONNECTION_PORT=\"localhost:3001\";function Chat(){// before login\nvar user=useSelector(selectUser);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loggedIn=_useState2[0],setLoggedIn=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,1),userName=_useState4[0];var _useState5=useState(\"Class of 2023\"),_useState6=_slicedToArray(_useState5,2),room=_useState6[0],setRoom=_useState6[1];// after login\nvar _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),messageList=_useState10[0],setMessageList=_useState10[1];useEffect(function(){socket=io(CONNECTION_PORT);},[CONNECTION_PORT]);useEffect(function(){socket.on(\"receive_message\",function(data){setMessageList([].concat(_toConsumableArray(messageList),[data]));});});var connectToRoom=function connectToRoom(){setLoggedIn(true);socket.emit(\"join_room\",room);};var sendMessage=function sendMessage(e){var messageContent={room:room,content:{author:user.username,message:message}};setMessage(\"\");e.preventDefault();socket.emit(\"send_message\",messageContent);setMessageList([].concat(_toConsumableArray(messageList),[messageContent.content]));};return/*#__PURE__*/_jsx(\"div\",{className:\"Appq\",children:!loggedIn?/*#__PURE__*/_jsxs(\"div\",{className:\"logIn\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"inputs\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Room...\",onChange:function onChange(e){setRoom(e.target.value);}})}),/*#__PURE__*/_jsx(\"button\",{onClick:connectToRoom,children:\"Enter Chat\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"chatContainer\",children:[/*#__PURE__*/_jsx(ReactScrollableFeed,{children:/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:messageList.map(function(val,key){return/*#__PURE__*/_jsx(\"div\",{className:\"messageContainer\",id:val.author===userName?\"Other\":\"You\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"messageIndividual\",children:[val.author,\": \",val.message]})});})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"messageInputs\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,placeholder:\"Message...\",onChange:function onChange(e){setMessage(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]})]})});}export default Chat;","map":{"version":3,"sources":["D:/siteapp - Kopya/client/src/pages/Chat.js"],"names":["React","useState","useEffect","io","ReactScrollableFeed","useSelector","selectUser","socket","CONNECTION_PORT","Chat","user","loggedIn","setLoggedIn","userName","room","setRoom","message","setMessage","messageList","setMessageList","on","data","connectToRoom","emit","sendMessage","e","messageContent","content","author","username","preventDefault","target","value","map","val","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport ReactScrollableFeed from \"react-scrollable-feed\";\r\nimport \"./Chat.css\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../reducer/infuser\";\r\n\r\n\r\n\r\nlet socket;\r\nconst CONNECTION_PORT = \"localhost:3001\";\r\n\r\nfunction Chat() {\r\n  // before login\r\n  \r\n  const user = useSelector(selectUser);\r\n\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [userName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"Class of 2023\");\r\n\r\n  // after login\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket = io(CONNECTION_PORT);\r\n  }, [CONNECTION_PORT]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_message\", (data) => {\r\n      setMessageList([...messageList, data]);\r\n    });\r\n  });\r\n\r\n  const connectToRoom = () => {\r\n    setLoggedIn(true);\r\n    socket.emit(\"join_room\", room);\r\n  };\r\n\r\n  const sendMessage =  (e) => {\r\n    let messageContent = {\r\n      room: room,\r\n      content: {\r\n        author: user.username,\r\n        message: message,\r\n      },\r\n    };\r\n\r\n    setMessage(\"\");\r\n    e.preventDefault();\r\n    \r\n    socket.emit(\"send_message\", messageContent);\r\n    setMessageList([...messageList, messageContent.content]);\r\n    \r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"Appq\">\r\n      {!loggedIn ? (\r\n        <div className=\"logIn\">\r\n          <div className=\"inputs\">\r\n           \r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Room...\"\r\n              onChange={(e) => {\r\n                setRoom(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <button onClick={connectToRoom}>Enter Chat</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"chatContainer\">\r\n          <ReactScrollableFeed>\r\n            <div className=\"messages\">\r\n              {messageList.map((val, key) => {\r\n                return (\r\n                  <div\r\n                    className=\"messageContainer\"\r\n                    id={val.author === userName ? \"Other\" : \"You\"}\r\n                  >\r\n                    <div className=\"messageIndividual\">\r\n                      {val.author}: {val.message}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </ReactScrollableFeed>\r\n          <div className=\"messageInputs\">\r\n            <input\r\n              type=\"text\"\r\n              value={message}\r\n              placeholder=\"Message...\"\r\n              onChange={(e) => {\r\n                setMessage(e.target.value);\r\n              }}\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}